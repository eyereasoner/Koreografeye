#!/bin/bash
#
# A command line policy executor
#
PROJDIR=$(dirname $0)

if [ $# -eq 0 ]; then
    cat <<EOF;
usage: $0 [options] orch-output-file

options:
    -c, --config <file>     : orchestrator config file
    -i, --in  <directory>   : directory with input notifications
    -o, --out <directory>   : directory with policy executor output
    -e, --error <directory> : directory with policy executor error output
    -k, --keep              : keep --in data (don't delete after processing)
EOF
    exit 1
fi

for arg in "$@"; do
    shift
    case "$arg" in  
        '--in')    set -- "$@" '-i' ;;
        '--out')   set -- "$@" '-o' ;;
        '--err')   set -- "$@" '-e' ;;
        '--keep')  set -- "$@" '-k' ;;
        *)       set -- "$@" "$arg" ;;
    esac
done

# default
IN="out"
OUT="out/ok"
ERR="out/err"
CONF="./config.jsonld"
KEEP=0

OPTIND=1
while getopts "c:ki:o:e:" opt
do
    case "$opt" in
        'c') CONF=$OPTARG ;;
        'k') KEEP=1 ;;
        'i') IN=$OPTARG ;;
        'o') OUT=$OPTARG ;;
        'e') ERR=$OPTARG ;;
    esac
done

shift $(expr $OPTIND - 1) # remove options from positional parameter

for f in ${IN}/*; do

    if [ ! -f $f ]; then
        continue
    fi

    BASENAME=$(basename -- $f)

    TMPERROR=$(mktemp)

    echo -n "$f : "

    if [ $KEEP -eq 1 ]; then
        node dist/pol.js --config ${CONF} --keep --single "$f" > ${TMPERROR} 2>&1
    else
        node dist/pol.js --config ${CONF} --single "$f" > ${TMPERROR} 2>&1
    fi

    if [ $? -eq 0 ]; then
        echo "OK" 
        cat ${TMPERROR} >&2
        rm ${TMPERROR}
    else
        echo "FAILED"
        cat ${TMPERROR} >&2
        mv ${TMPERROR} ${ERR}/${BASENAME}
    fi
done