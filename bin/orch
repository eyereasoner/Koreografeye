#!/bin/bash
#
# A command line orchestration run
#
PROJDIR=$(dirname $0)

cd ${PROJDIR}/..

if [ $# -eq 0 ]; then
    cat <<EOF;
usage: $0 [options] rule [rule ...]

options:
    -c, --config <file>    : orchestrator config file
    -i, --in  <directory>  : directory with input notifications
    -o, --out <directory>  : directory with orchestrator output
    -r, --err <directory>  : directory with failed notifications
    -k, --keep             : keep --in data (don't delete after processing)
EOF
    exit 1
fi

for arg in "$@"; do
    shift
    case "$arg" in  
        '--config') set -- "$@" '-c' ;;
        '--in')     set -- "$@" '-i' ;;
        '--out')    set -- "$@" '-o' ;;
        '--err')    set -- "$@" '-e' ;;
        '--keep')   set -- "$@" '-k' ;;
        *)          set -- "$@" "$arg" ;;
    esac
done

# default
IN="in"
OUT="out"
ERR="err"
CONF="./config.jsonld"
KEEP=0

OPTIND=1
while getopts "c:ki:o:e:" opt
do
    case "$opt" in
        'c') CONF=$OPTARG ;;
        'k') KEEP=1 ;;
        'i') IN=$OPTARG ;;
        'o') OUT=$OPTARG ;;
        'e') ERR=$OPTARG ;;
    esac
done

shift $(expr $OPTIND - 1) # remove options from positional parameter

if [ $# -eq 0 ]; then 
    echo "$0 : missing rules argument"
    exit 1
fi

for f in ${IN}/*; do

    BASENAME=$(basename -- $f | sed 's/\.[a-zA-Z0-9]*//')

    TMPDATA=$(mktemp)
    TMPERROR=$(mktemp)

    # echo "node dist/orch.js $f $@ > ${TMPDATA} 2> ${TMPERROR}" >&2

    echo -n "$f : "
    node --no-warnings dist/orch.js --config ${CONF} $f "$@" > ${TMPDATA} 2> ${TMPERROR}

    if [ $? -eq 0 ]; then
        echo "OK" 
        mv ${TMPDATA} ${OUT}/${BASENAME}.ttl
        cat ${TMPERROR} >&2
        rm ${TMPERROR}
    else
        echo "FAILED"
        rm ${TMPDATA}
        cat ${TMPERROR} >&2
        mv ${TMPERROR} ${ERR}/${BASENAME}.ttl
    fi

    if [ $KEEP -eq 0 ]; then 
        rm $f
    fi
done